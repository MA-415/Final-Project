---
title: "Buoy_Students"
format: pdf
editor: visual
---

## Packages to Install

```{r, warning = FALSE}
library(data.table)
library(dplyr)
library(lubridate)
library(ggplot2)
library(zoo)
library(tibble)
library(readr)
```

## Compiling all years' data

1.  Try to remember why 2007 is the split year
2.  Why are using different functions to read data prior and post 2007?
3.  What are some new function you got to know from following code? what do these functions do?

```{r, warning=FALSE, message=FALSE}
file_root <- "https://www.ndbc.noaa.gov/view_text_file.php?filename=44013h"
tail <- ".txt.gz&dir=data/historical/stdmet/"

load_buoy_data1 <- function(year) {
  path <- paste0(file_root, year, tail)
  
  
  if (year < 2007) {
  header <- scan(path, what = 'character', nlines = 1)
  buoy <- read.table(path, fill = TRUE, header = TRUE, sep = "")
  buoy <- add_column(buoy, mm = NA, .after = "hh")
  buoy <- add_column(buoy, TIDE = NA, .after = "VIS")
    
  } else {
  header <- scan(path, what = 'character', nlines = 1)  
  buoy <- fread(path, header = FALSE, skip = 1, fill = TRUE)

    setnames(buoy, header)
  }
  
  #return(buoy)
}

all_data1 <- lapply(1985:2024, load_buoy_data1)

combined_data1 <- rbindlist(all_data1, fill = TRUE)
```

#### Q1: Can you try to compile atleast 5 buoys data for some years?

```{r}
#This also gets data from other buoys nearby
file_root <- "https://www.ndbc.noaa.gov/view_text_file.php?filename="
tail <- ".txt.gz&dir=data/historical/stdmet/"

load_buoy_data <- function(buoy_id, year) {
  path <- paste0(file_root, buoy_id, "h", year, tail)
  
  if (year < 2007) {
    header <- scan(path, what = 'character', nlines = 1)
    buoy <- read.table(path, fill = TRUE, header = TRUE, sep = "")
    buoy <- add_column(buoy, mm = NA, .after = "hh")
    buoy <- add_column(buoy, TIDE = NA, .after = "VIS")
  } else {
    header <- scan(path, what = 'character', nlines = 1)
    buoy <- fread(path, header = FALSE, skip = 1, fill = TRUE)
    setnames(buoy, header)
  }
  
  return(buoy)
}

buoy_ids <- c("44025", "44097", "44013", "44014","44020")
years <- 2010:2015

all_data <- rbindlist(
  do.call(c, lapply(buoy_ids, function(buoy) lapply(years, function(y) load_buoy_data(buoy, y)))), 
  fill = TRUE
)

```

#### Q2: Try some other method for compiling all the data other than the one mentioned above.

```{r}
#This does not use a function, instead it uses lists
file_root <- "https://www.ndbc.noaa.gov/view_text_file.php?filename=44013h"
tail <- ".txt.gz&dir=data/historical/stdmet/"

# Initialize an empty list to store data
all_data2 <- list()

# Loop over the years and load data
for (year in 1985:2024) {
  path <- paste0(file_root, year, tail)
  
  if (year < 2007) {
    header <- scan(path, what = 'character', nlines = 1, quiet = TRUE)
    buoy <- read.table(path, fill = TRUE, header = TRUE, sep = "")
    buoy <- add_column(buoy, mm = NA, .after = "hh")
    buoy <- add_column(buoy, TIDE = NA, .after = "VIS")
  } else {
    header <- scan(path, what = 'character', nlines = 1, quiet = TRUE)
    buoy <- fread(path, header = FALSE, skip = 1, fill = TRUE)
    setnames(buoy, header)
  }
  
  # Store in the list
  all_data2[[as.character(year)]] <- buoy
}

# Combine all data frames into one
combined_data2 <- rbindlist(all_data2, fill = TRUE)
```

## Cleaning and Organizing the data

We start by merging all different version of `Year` column. We do same with other columns which are same but having data for certain set of years. We remove the remaining columns after merging them.

Creating datetime column using `lubridate()`

```{r}
combined_data1 <- combined_data1 %>%
  mutate(
    YY = as.character(YY),
    `#YY` = as.character(`#YY`),
    YYYY = as.character(YYYY)
  )

# Combine year columns safely using coalesce
combined_data1 <- combined_data1 %>%
  mutate(YYYY = coalesce(YYYY, `#YY`, YY))
combined_data1 <- combined_data1 %>%
  mutate(BAR = coalesce(as.numeric(BAR), as.numeric(PRES)),  # Convert BAR and PRES to numeric
    WD = coalesce(as.numeric(WD), as.numeric(WDIR)))

combined_data1 <- combined_data1 %>%
  select(-TIDE, -TIDE.1, -mm,- WDIR, -PRES,-`#YY`,-YY)

combined_data1$datetime <- ymd_h(paste(combined_data1$YYYY, combined_data1$MM, combined_data1$DD, combined_data1$hh, sep = "-"))

combined_data1 <- combined_data1 %>%
  mutate(across(everything(), 
                ~ na_if(as.numeric(as.character(.)), 99) %>%
                na_if(999) %>%
                na_if(9999)))

#summary(combined_data)
#str(combined_data)
#str(combined_data$datetime)
if (!inherits(combined_data1$datetime, "POSIXct")) {
  combined_data1$datetime <- ymd_h(paste(combined_data1$YYYY, combined_data1$MM, combined_data1$DD, combined_data1$hh, sep = "-"))
}
```

# Homework

Try to look more into data and get some visualizations using the one taught in the discussion and `ggplot()`

Have at least a question or two or a direction to study for in buoy data.

```{r}
combined_data <- combined_data1 %>% filter(year(datetime) == 2020)

# Plot water temperature vs air temperature for one year
ggplot(combined_data, aes(x = datetime)) +
  geom_line(aes(y = WTMP, color = "Water Temperature"), size = 1, alpha = 0.8) +
  geom_line(aes(y = ATMP, color = "Air Temperature"), size = 1, linetype = "dashed", alpha = 0.6) +
  labs(title = "Water Temperature vs Air Temperature in 2020",
       x = "Date",
       y = "Temperature (Â°C)",
       color = "Legend") +
  theme_minimal() +
  scale_color_manual(values = c("Water Temperature" = "blue", "Air Temperature" = "orange"))
```
